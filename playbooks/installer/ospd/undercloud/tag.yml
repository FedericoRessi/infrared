- name: Tag our machines with flavors
  hosts: undercloud
  gather_facts: no
  become: yes
  become_user: "{{ installer.user.name }}"
  any_errors_fatal: true
  tasks:
      - name: Check for the instackenv file
        stat:
            path: "/home/{{ installer.user.name }}/instackenv.json"
        register: instack_file_path

      - set_fact:
            instack_file: "{{ instack_file_path.stat.path }}"
        when: instack_file_path.stat.exists

      - fail:
            msg: "instackenv file is missing"
        when: not instack_file_path.stat.exists

      - name: create the baremetal flavor for our machines
        tags: debug
        shell: "source ~/stackrc; openstack flavor create --id auto --ram 4096 --disk 16 --vcpus 1 baremetal"
        register: result
        ignore_errors: yes
        failed_when: "result.rc != 0 and result.stderr.find('Flavor with name baremetal already exists') != -1"

      - name: set additional properties
        shell: "source ~/stackrc; openstack flavor set --property 'cpu_arch'='x86_64' --property 'capabilities:boot_option'='local' baremetal"

      - name: read instackenv file for bm deployment
        command: cat "{{ instack_file }}"
        register: overcloud_hosts_facts

      - set_fact:
            overcloud_facts: "{{ overcloud_hosts_facts.stdout | from_json }}"

      - include: "remove_flavors.yml"
        when: "overcloud_facts.nodes[0].name is defined"

      - set_fact:
            tagged_flavors: "{{ flavor_result.results }}"

      - name: set additional properties
        shell: "source ~/stackrc; openstack flavor set --property 'cpu_arch'='x86_64' --property 'capabilities:boot_option'='local' --property 'capabilities:profile'='{{ item.cmd.split() | last }}' {{ item.cmd.split() | last }}"
        when: item.cmd is defined
        with_items: "{{ tagged_flavors | default([]) }}"

      - name: tag our nodes with the proper profile
        shell: "source ~/stackrc; ironic node-update {{ item[0].stdout }} add properties/capabilities='profile:{{ item[1].cmd.split() | last }},boot_option:local'"
        when: "item[0].item.name is defined and item[1].cmd is defined and item[0].item.name.rstrip('1234567890-') in item[1].cmd"
        with_together:
            - "{{ node_list.results }}"
            - "{{ tagged_flavors | default([]) }}"
