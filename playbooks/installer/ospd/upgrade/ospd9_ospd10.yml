---
- name: Enable repos for ospd 10
  hosts: undercloud
  any_errors_fatal: true
  become: yes
  roles:
      - role: installer/rhos-release
        director_version: "10"
        director_build: "latest"
        core_version: "10"
        core_build: "latest"
        mirror: "{{ installer.mirror | default(omit) }}"
        rr_rpm_url: "{{ installer.product.rpm }}"

- name: Upgrade the undercloud
  hosts: undercloud
  gather_facts: no
  any_errors_fatal: true
  vars:
      pacemaker_template: "pacemaker_template.sh.j2"
      ceilometer_migration: "~/ceilometer_migration.sh"
      pacemaker_init: "~/pacemaker_init.sh"
      pacemaker_upgrade: "~/pacemaker_upgrade.sh"
      pacemaker_converge: "~/pacemaker_converge.sh"
      rhos_release_yaml: "~/overcloud-repos.yaml"
      aodh_migration: "~/aodh_migration.sh"
  tasks:
      - name: "Download overcloud repos yaml"
        get_url:
          url: "http://file.rdu.redhat.com/~mlammon/tripleo/overcloud-repos.yaml"
          dest: "{{ rhos_release_yaml }}"

      - name: "Get storage template line"
        shell: "cat ~/overcloud_deploy.sh | grep storage-environment"
        register: storage_yaml
        when: installer.storage.backend is defined

      - name: "Get TLS template line"
        shell: "cat ~/overcloud_deploy.sh | grep enable-tls"
        register: ssl_yaml
        when: installer.overcloud.ssl == 'yes'

      - name: "Get the list of Neutron and OpenStack services"
        shell: "systemctl list-units {openstack-*,neutron-*} --type=service --no-legend | awk '{print $1}'"
        become: yes
        register: openstack_services

      - name: "Workarond for BZ #1372040"
        service:
          name: "{{ item }}"
          state: stopped
        with_items: "{{ openstack_services.stdout_lines }}"
        become: yes

      - name: "Upgrade undercloud"
        shell: "openstack undercloud upgrade"

      - name: "Add hosts keys to known hosts for further upgrade"
        shell: |
            ssh -o StrictHostKeyChecking=no heat-admin@"{{ hostvars[item]['ansible_ssh_host'] }}" "hostname"
        with_items: groups["overcloud_nodes"]
########################################################################################################################
      - name: "Ceilometer migration"
        template:
            src: "templates/{{ pacemaker_template }}"
            dest: "{{ ceilometer_migration }}"
            mode: 0755
        with_items: "major-upgrade-ceilometer-wsgi-mitaka-newton"

      - name: "The ceilometer migration script"
        shell: "cat {{ ceilometer_migration }}"

      - name: "Running ceilometer migration "
        shell: |
            source ~/stackrc
            bash {{ ceilometer_migration }}
        register: overcloud_ceilometer_migration
        ignore_errors: yes

      - debug: msg="The ceilometer migration failed!"
        when: overcloud_ceilometer_migration.rc != 0

      - name: "Print the last few lines of the output to spot failures"
        shell: "tail -n60 major-upgrade-ceilometer-wsgi-mitaka-newton.log"
########################################################################################################################
      - name: "Create the init upgrade script"
        template:
            src: "templates/{{ pacemaker_template }}"
            dest: "{{ pacemaker_init }}"
            mode: 0755
        with_items: "major-upgrade-pacemaker-init"

      - name: "The init upgrade script"
        shell: "cat {{ pacemaker_init }}"

      - name: "Running pacemaker upgrade init"
        shell: |
            source ~/stackrc
            bash {{ pacemaker_init }}
        register: overcloud_init_upgrade
        ignore_errors: yes

      - debug: msg="The major upgrade failed!"
        when: overcloud_init_upgrade.rc != 0

      - name: "Print the last few lines of the output to spot failures"
        shell: "tail -n60 major-upgrade-pacemaker-init.log"
########################################################################################################################
      - name: "Get objectstorage node IDs"
        shell: |
            source ~/stackrc
            nova list|awk '/objectstorage/ {print $2}'
        register: objectstorage_ids

      - name: "Upgrade objectstorages"
        shell: |
            source ~/stackrc
            upgrade-non-controller.sh --upgrade "{{ item }}"
        with_items: "{{ objectstorage_ids.stdout_lines }}"
        when: objectstorage_ids.stdout != ""
########################################################################################################################
      - name: "Create the upgrade script"
        template:
            src: "templates/{{ pacemaker_template }}"
            dest: "{{ pacemaker_upgrade }}"
            mode: 0755
        with_items: "major-upgrade-pacemaker"

      - name: "The major upgrade script"
        shell: "cat {{ pacemaker_upgrade }}"

      - name: "Running pacemaker upgrade"
        shell: |
            source ~/stackrc
            bash {{ pacemaker_upgrade }}
        register: overcloud_pacemaker_upgrade
        ignore_errors: yes

      - debug: msg="Pacemaker upgrade failed!"
        when: overcloud_pacemaker_upgrade.rc != 0

      - name: print the last few lines of the output to spot failures
        shell: "tail -n60 major-upgrade-pacemaker.log"
########################################################################################################################
      - name: "Get computes IDs"
        shell: |
            source ~/stackrc
            nova list|awk '/compute/ {print $2}'
        register: compute_ids

      - name: "Upgrade computes"
        shell: |
            source ~/stackrc
            upgrade-non-controller.sh --upgrade "{{ item }}"
        with_items: "{{ compute_ids.stdout_lines }}"
########################################################################################################################
      - name: "Get ceph node IDs"
        shell: |
            source ~/stackrc
            nova list|awk '/ceph/ {print $2}'
        register: ceph_ids

      - name: "Upgrade cephs"
        shell: |
            source ~/stackrc
            upgrade-non-controller.sh --upgrade "{{ item }}"
        with_items: "{{ ceph_ids.stdout_lines }}"
        when: ceph_ids.stdout != ""
########################################################################################################################
      - name: "Create the converge script"
        template:
            src: "templates/{{ pacemaker_template }}"
            dest: "{{ pacemaker_converge }}"
            mode: 0755
        with_items: "major-upgrade-pacemaker-converge"

      - name: "The pacemaker converge script"
        shell: "cat {{ pacemaker_converge }}"

      - name: "Running pacemaker converge"
        shell: |
            source ~/stackrc
            bash {{ pacemaker_converge }}
        register: overcloud_pacemaker_converge
        ignore_errors: yes

      - debug: msg="The deployment already failed!"
        when: overcloud_pacemaker_converge.rc != 0

      - name: print the last few lines of the output to spot failures
        shell: "tail -n60 major-upgrade-pacemaker-converge.log"
########################################################################################################################
      - name: "Create post upgrade aodh migration script"
        template:
            src: "templates/{{ pacemaker_template }}"
            dest: "{{ aodh_migration }}"
            mode: 0755
        with_items: "major-upgrade-aodh-migration"

      - name: "The aodh migration script"
        shell: "cat {{ aodh_migration }}"

      - name: "Running aodh migtration"
        shell: |
            source ~/stackrc
            bash {{ aodh_migration }}
        register: overcloud_aodh_migration
        ignore_errors: yes

      - debug: msg="The deployment already failed!"
        when: overcloud_aodh_migration.rc != 0

      - name: print the last few lines of the output to spot failures
        shell: "tail -n60 major-upgrade-aodh-migration.log"
########################################################################################################################
      - name: "Installing new images RPMs"
        yum:
            name: rhosp-director-images.noarch
            state: latest

      - name: Estracting images from tars
        shell: |
          mkdir ~/new-images
          pushd ~/new-images
          tar xvf /usr/share/rhosp-director-images/overcloud-full-latest-10*.tar
          tar xvf /usr/share/rhosp-director-images/ironic-python-agent-latest-10*.tar

      - name: Updating images in glance
        shell: |
            source ~/stackrc
            openstack overcloud image upload --update-existing
        args:
            chdir: ~/new-images

      - name: Configuring boot
        shell: |
            source ~/stackrc
            openstack baremetal configure boot
        args:
            chdir: ~/new-images
