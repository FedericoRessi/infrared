---
# This file is used to create OpenStack neutron resources

- name: Create networks
  os_network:
      cloud: "{{ provisioner.cloud | default(omit) }}"
      external: "{{ item.value.external | default(omit) }}"
      name: "{{ prefix }}{{ item.value.name }}"
      state: present
      shared: "{{ item.value.shared | default(omit) }}"
      timeout: "{{ item.value.timeout | default(timeout_network) }}"
  register: networks
  with_dict: "{{ provisioner.neutron.networks }}"
  when: provisioner.neutron.networks is defined

- name: Register externally accessible networks
  os_networks_facts:
      cloud: "{{ provisioner.cloud | default(omit) }}"
      filters:
          router:external: true
  register: networks_details
- debug: var=networks_details

- name: Set external network id
  set_fact:
      external_network_id: "{{ item.value[0].id }}"
  with_dict: "{{ networks_details.ansible_facts }}"

- name: Create subnets
  os_subnet:
      allocation_pool_start: "{{ item.value.allocation_pool_start }}"
      allocation_pool_end: "{{ item.value.allocation_pool_end }}"
      cidr: "{{ item.value.cidr | default(omit) }}"
      cloud: "{{ provisioner.cloud | default(omit) }}"
      dns_nameservers: "{{ item.value.dns_servers | default(dns_servers) }}"
      enable_dhcp: "{{ item.value.enable_dhcp | default(enable_dhcp) }}"
      name: "{{ prefix }}{{ item.value.name }}"
      network_name: "{{ prefix }}{{ item.value.network_name }}"
      state: present
  register: subnets
  with_dict: "{{ provisioner.neutron.subnets }}"
  when: provisioner.neutron.subnets is defined

- name: Create routers
  os_router:
      cloud: "{{ provisioner.cloud | default(omit) }}"
      external_fixed_ips: "{{ item.value.external_fixed_ips | default(omit) }}"
      interfaces: "{{ item.value.attach_subnets | map('add_prefix', prefix) | join(',') }}"
      name: "{{ prefix }}{{ item.value.name | default(router_name) }}"
      network: "{{ external_network_id }}"
      state: present
  register: routers
  with_dict: "{{ provisioner.neutron.routers }}"
  when: provisioner.neutron.routers is defined
